{
  "_id": "yEPv1InFUHWnh1kt",
  "name": "Create Loot Sheets",
  "permission": {
    "default": 0
  },
  "type": "script",
  "flags": {},
  "scope": "global",
  "command": "// CONFIGURATION\n/**\n * @param {string} folder - A string of folder names, separated by '/' (slashes)\n * @param {number} defaultPermission - A constant number, to be gathered from the global object CONST.ENTITY_PERMISSIONS (for quick reference, you can replace 'OBSERVER' with one of the following: 'NONE', 'LIMITED' or 'OWNER'\n * @param {string} sheetType - Change this if you have a module installed for a different loot sheet type.\n */\n\nconst c = {\n    folder: \"Misc/Loot\",\n    defaultPermission: CONST.ENTITY_PERMISSIONS.OBSERVER,\n    sheetType: \"PF1.ActorSheetPFNPCLoot\",\n};\n\n// END CONFIGURATION\n\n(async () => {\n\n    // Get selected tokens\n    let tokens = canvas.tokens.controlled;\n    if (!tokens.length) return;\n\n    // Create folder(s)\n    let lastFolder = null;\n    let lastIndex = 0;\n    if (c.folder) {\n        const folders = game.folders.filter(f => f.type === \"Actor\");\n        const folderNames = c.folder.split(\"/\");\n        for (let a = 0; a < folderNames.length; a++) {\n            let curName = folderNames[a];\n            let prevName = a > 0 ? folderNames[a-1] : null;\n            \n            const f = folders.find(o => o.name === curName && (o.parent ? o.parent.name === prevName : true));\n            if (f) {\n                lastFolder = f;\n                lastIndex = a+1;\n            }\n        }\n\n        for (let a = lastIndex; a < folderNames.length; a++) {\n            const newFolder = await Folder.create({\n                name: folderNames[a],\n                parent: lastFolder ? lastFolder._id : null,\n                type: \"Actor\",\n            });\n            lastFolder = newFolder;\n        }\n    }\n\n    // Gather currency\n    let [pp, gp, sp, cp] = tokens.reduce((cur, t) => {\n        cur[0] += t.actor.data.data.currency.pp;\n        cur[1] += t.actor.data.data.currency.gp;\n        cur[2] += t.actor.data.data.currency.sp;\n        cur[3] += t.actor.data.data.currency.cp;\n        return cur;\n    }, [0, 0, 0, 0]);\n\n    // Create loot NPC for selected tokens\n    const lootName = \"(Loot) \" + tokens.reduce((cur, o) => {\n        cur.push(o.name);\n        return cur;\n    }, []).join(\", \");\n    const lootNPC = await Actor.create({\n        name: lootName,\n        type: \"npc\",\n        img: tokens[0].actor.img,\n        folder: lastFolder ? lastFolder._id : null,\n        permission: {\n            default: c.defaultPermission,\n        },\n        flags: {\n            core: {\n                sheetClass: c.sheetType,\n            },\n        },\n        data: {\n            currency: {\n                pp: pp,\n                gp: gp,\n                sp: sp,\n                cp: cp,\n            },\n        },\n    });\n\n    // Gather item data\n    const itemData = tokens.reduce((cur, o) => {\n        for (let i of o.actor.items) {\n            if (game.pf1.documents.ItemPF.isInventoryItem(i.type) && i.data.data.quantity > 0) {\n                // Check for identical data\n                let addRaw = true;\n                let firstItem;\n                for (let i2 of cur) {\n                    if (i2.name === i.name) {\n                        firstItem = i2;\n                        addRaw = false;\n                        const diffData = flattenObject(diffObject(i.data.data, i2.data));\n                        for (let k of Object.keys(diffData)) {\n                            if (![\"quantity\"].includes(k)) addRaw = true;\n                        }\n                    }\n                }\n                if (addRaw) {\n                    cur.push(duplicate(i.data));\n                }\n                else {\n                    firstItem.data.quantity += i.data.data.quantity;\n                }\n            }\n        }\n        return cur;\n    }, []);\n    \n    // Add items\n    await lootNPC.createOwnedItem(itemData);\n\n})();",
  "author": "ZuWclcb9BUy2aZSN",
  "img": "systems/pf1/icons/items/inventory/chest-light.jpg",
  "actorIds": []
}